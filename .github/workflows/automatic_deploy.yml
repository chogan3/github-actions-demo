# Configuring and Managing Workflows
# https://help.github.com/en/actions/configuring-and-managing-workflows

# Migrating from CircleCI to GitHub Actions
# https://help.github.com/en/actions/migrating-to-github-actions/migrating-from-circleci-to-github-actions

name: Automatic Deploy
env:
  AWS_REGION: us-east-2
  NODE_VERSION: '14'
  STAGE: test

on:
  workflow_run:
    workflows: ['CI']
    branches: [main]
    types: [completed]

jobs:
  serverlessDeploy:
    name: Serverless Deploy

    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ env.NODE_VERSION }}

      # For troubleshooting if needed
      - name: Output event and runner contexts
        env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: |
          echo "$EVENT_CONTEXT"
          echo "$RUNNER_CONTEXT"

      - name: Configure AWS credentials - NONPROD
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.NONPROD_AWS_ACCESS_KEY_ID }} # TODO: Add NONPROD AWS credentials to your repo's secrets
          aws-secret-access-key: ${{ secrets.NONPROD_AWS_SECRET_ACCESS_KEY }} # TODO: Add NONPROD AWS credentials to your repo's secrets
          aws-region: ${{ env.AWS_REGION }}

      - name: Test AWS credentials
        if: success()
        run: aws s3 ls

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache/restore dependencies
        uses: actions/cache@v2
        id: yarn-deploy-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-deploy-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-deploy-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

      - name: Serverless Framework version
        run: yarn sls --version

      - name: Deploy
        run: yarn sls deploy --stage=${{ env.STAGE }} --conceal

      # Getting your webhook uri: https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using#setting-up-a-custom-incoming-webhook
      # More info on message cards: https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference
      # TODO: Add your Teams channel webhook uri to your repo's secrets if you want workflow notifications in teams (or remove this step entirely)
      - name: Send success message to MS Teams
        if: success()
        run: |
          cat .github/workflows/notifications/deployment-success.json | \
            curl -H 'Content-Type: application/json' \
            -d '{"@type":"MessageCard","@context":"https://schema.org/extensions","themeColor":"00b300","title":"Automatic Deployment to ${{ env.STAGE }} from ${{ github.actor }}","text":"${{ github.repository }} - ${{ github.ref }} - ${{ github.sha }}","sections":[{"activityTitle":"SUCCESS"}],"potentialAction":[{"@type":"OpenUri","name":"Repository","targets":[{"os":"default","uri":"${{ github.event.repository.html_url }}"}]},{"@type":"OpenUri","name":"${{ github.workflow }} Workflow","targets":[{"os":"default","uri":"${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"}]}]}' \
            ${{ secrets.MSTEAMS_WEBHOOK_URI }}

      # Getting your webhook uri: https://docs.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/connectors-using#setting-up-a-custom-incoming-webhook
      # More info on message cards: https://docs.microsoft.com/en-us/outlook/actionable-messages/message-card-reference
      # TODO: Add your Teams channel webhook uri to your repo's secrets if you want workflow notifications in teams (or remove this step entirely)
      - name: Send failure message to MS Teams
        if: failure()
        run: |
          cat .github/workflows/notifications/deployment-failure.json | \
            curl -H 'Content-Type: application/json' \
            -d '{"@type":"MessageCard","@context":"https://schema.org/extensions","themeColor":"b30000","title":"Automatic Deployment to ${{ env.STAGE }} from ${{ github.actor }}","text":"${{ github.repository }} - ${{ github.ref }} - ${{ github.sha }}","sections":[{"activityTitle":"FAILURE"}],"potentialAction":[{"@type":"OpenUri","name":"Repository","targets":[{"os":"default","uri":"${{ github.event.repository.html_url }}"}]},{"@type":"OpenUri","name":"${{ github.workflow }} Workflow","targets":[{"os":"default","uri":"${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"}]}]}' \
            ${{ secrets.MSTEAMS_WEBHOOK_URI }}
